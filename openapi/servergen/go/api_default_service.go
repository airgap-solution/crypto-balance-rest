// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Crypto Balance API
 *
 * Derives addresses from an extended public key (XPUB) or equivalent, retrieves balances for a given cryptocurrency, and converts them to the requested fiat currency using an external rate service. 
 *
 * API version: 1.0.2
 */

package cryptobalancerest

import (
	"context"
	"net/http"
	"errors"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// BalanceGet - Get account balance in crypto and fiat
func (s *DefaultAPIService) BalanceGet(ctx context.Context, xpub string, currency string, fiat string) (ImplResponse, error) {
	// TODO - update BalanceGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, BalanceGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, BalanceGet200Response{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BalanceGet method not implemented")
}
