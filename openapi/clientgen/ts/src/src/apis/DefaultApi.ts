/* tslint:disable */
/* eslint-disable */
/**
 * Bitcoin Balance API
 * Derives Taproot addresses from an XPUB, checks balances via Electrum, and converts to a fiat currency using an external crypto rate service. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BalanceGet200Response,
} from '../models/index';
import {
    BalanceGet200ResponseFromJSON,
    BalanceGet200ResponseToJSON,
} from '../models/index';

export interface BalanceGetRequest {
    xpub: string;
    currency: string;
    fiat: string;
}

/**
 * DefaultApi - interface
 * 
 * @export
 * @interface DefaultApiInterface
 */
export interface DefaultApiInterface {
    /**
     * Derives addresses from an XPUB, queries Electrum for balances, and converts to the requested fiat currency using the crypto rate API. 
     * @summary Get XPUB balance in BTC and fiat
     * @param {string} xpub Extended public key (XPUB) to derive addresses from.
     * @param {string} currency Crypto currency symbol (must be supported by the rate API).
     * @param {string} fiat Fiat currency symbol.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    balanceGetRaw(requestParameters: BalanceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BalanceGet200Response>>;

    /**
     * Derives addresses from an XPUB, queries Electrum for balances, and converts to the requested fiat currency using the crypto rate API. 
     * Get XPUB balance in BTC and fiat
     */
    balanceGet(requestParameters: BalanceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BalanceGet200Response>;

}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI implements DefaultApiInterface {

    /**
     * Derives addresses from an XPUB, queries Electrum for balances, and converts to the requested fiat currency using the crypto rate API. 
     * Get XPUB balance in BTC and fiat
     */
    async balanceGetRaw(requestParameters: BalanceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BalanceGet200Response>> {
        if (requestParameters['xpub'] == null) {
            throw new runtime.RequiredError(
                'xpub',
                'Required parameter "xpub" was null or undefined when calling balanceGet().'
            );
        }

        if (requestParameters['currency'] == null) {
            throw new runtime.RequiredError(
                'currency',
                'Required parameter "currency" was null or undefined when calling balanceGet().'
            );
        }

        if (requestParameters['fiat'] == null) {
            throw new runtime.RequiredError(
                'fiat',
                'Required parameter "fiat" was null or undefined when calling balanceGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['xpub'] != null) {
            queryParameters['xpub'] = requestParameters['xpub'];
        }

        if (requestParameters['currency'] != null) {
            queryParameters['currency'] = requestParameters['currency'];
        }

        if (requestParameters['fiat'] != null) {
            queryParameters['fiat'] = requestParameters['fiat'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/balance`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BalanceGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Derives addresses from an XPUB, queries Electrum for balances, and converts to the requested fiat currency using the crypto rate API. 
     * Get XPUB balance in BTC and fiat
     */
    async balanceGet(requestParameters: BalanceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BalanceGet200Response> {
        const response = await this.balanceGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
